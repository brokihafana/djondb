/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace djondb {

using System;
using System.Runtime.InteropServices;

public class ParseException : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ParseException(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ParseException obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ParseException() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          djonwrapperPINVOKE.delete_ParseException(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public ParseException(int code, string error) : this(djonwrapperPINVOKE.new_ParseException__SWIG_0(code, error), true) {
  }

  public ParseException(ParseException orig) : this(djonwrapperPINVOKE.new_ParseException__SWIG_1(ParseException.getCPtr(orig)), true) {
    if (djonwrapperPINVOKE.SWIGPendingException.Pending) throw djonwrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual string what() {
    string ret = djonwrapperPINVOKE.ParseException_what(swigCPtr);
    return ret;
  }

  public int errorCode() {
    int ret = djonwrapperPINVOKE.ParseException_errorCode(swigCPtr);
    return ret;
  }

}

}
