/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace djondb {

using System;
using System.Runtime.InteropServices;

public class BSONParser : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal BSONParser(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(BSONParser obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~BSONParser() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          djonwrapperPINVOKE.delete_BSONParser(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public BSONParser() : this(djonwrapperPINVOKE.new_BSONParser(), true) {
  }

  public static BSONObj parse(string sbson) {
    IntPtr cPtr = djonwrapperPINVOKE.BSONParser_parse(sbson);
    BSONObj ret = (cPtr == IntPtr.Zero) ? null : new BSONObj(cPtr, false);
    if (djonwrapperPINVOKE.SWIGPendingException.Pending) throw djonwrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static BSONArrayObj parseArray(string sbson) {
    IntPtr cPtr = djonwrapperPINVOKE.BSONParser_parseArray(sbson);
    BSONArrayObj ret = (cPtr == IntPtr.Zero) ? null : new BSONArrayObj(cPtr, false);
    if (djonwrapperPINVOKE.SWIGPendingException.Pending) throw djonwrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
